{"version":3,"sources":["components/SideNav/styles.js","components/SideNav/index.js","components/Note/styles.js","components/Note/index.js","components/App.js","index.js"],"names":["MainNav","styled","nav","Header","header","Hr","hr","CardButton","button","SideNav","noteTitles","changeCurrentNote","addNote","style","fontWeight","textDecoration","onClick","map","title","i","key","e","MainDiv","div","InputTitle","input","BlockButtonDiv","BlockButtons","BlockStyleControls","onToggle","label","type","preventDefault","Note","note","handleChangeTitle","handleChangeBody","useState","EditorState","createEmpty","editorState","setEditorState","placeholder","value","onChange","blockType","RichUtils","toggleBlockType","color","handleKeyCommand","command","newState","Div","App","notes","setNotes","selectedNoteIndex","setSelectedNoteIndex","useEffect","body","event","prevNote","concat","length","titleValue","target","bodyValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3f7407a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MainNav = styled.nav`\n  background-color: #ccc;\n  width: 20%;\n  height: 100%;\n`;\n\nexport const Header = styled.header`\n  text-align: center;\n  padding: 4%;\n  background-color: grey;\n`;\n\nexport const Hr = styled.hr`\n  margin: 0;\n  border: none;\n  background-color: black;\n  height: .3%\n`;\n\nexport const CardButton = styled.button`\n  border: none; // resets defaults\n  outline: none; // reset defaults when active\n  font-size: 20px;\n  font-weight: 500;\n  background-color: inherit;\n  padding: 10%;\n  width: 100%;\n  :hover {\n    background-color: white;\n  }\n  :active {\n    background-color: #29B6F6;\n  }\n`;","import React from 'react';\nimport { MainNav, Header, Hr, CardButton } from './styles.js'\n\nconst SideNav = ({noteTitles, changeCurrentNote, addNote}) => {\n  return (\n    <MainNav>\n      <Header>Notes App v0</Header>\n      <Hr/>\n      <CardButton style={{fontWeight: '800', textDecoration: 'underline'}} onClick={addNote}>Add a new note</CardButton>\n      {noteTitles.map((title, i) => (\n        <CardButton key={i} onClick={e => changeCurrentNote(e, i)}>{title === '' ? '*no title*' : title}</CardButton>\n      ))}\n    </MainNav>\n  );\n}\n\nexport default SideNav;","import styled from 'styled-components';\n\nexport const MainDiv = styled.div`\n  text-align: center;\n  margin: 2%;\n  padding: 1%;\n  width: 100%;\n`;\n\nexport const InputTitle = styled.input`\n  border: none;\n  width: 95%;\n  padding: 1%;\n  font-size: 3em;\n  outline: none;\n  border-bottom-style: solid;\n  border-bottom-color: black;\n`;\n\nexport const BlockButtonDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 1%;\n`;\n\nexport const BlockButtons = styled.button`\n  border: 1px solid #000;\n  outline: none;\n  background-color: #ccc;\n  font-size: 18px;\n  :active {\n    background-color: #29B6F6;\n  }\n`;","import React, { useState } from 'react';\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport './draft.css';\nimport { MainDiv, InputTitle, BlockButtonDiv, BlockButtons } from './styles'\n\nconst Note = ({note, handleChangeTitle, handleChangeBody}) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onToggle = blockType => {\n    setEditorState(RichUtils.toggleBlockType(editorState, blockType));\n  }\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  }\n\n  return (\n    <MainDiv>\n      <InputTitle type='text' placeholder='Your note title...' value={note.title} onChange={handleChangeTitle}/>\n\n      <BlockStyleControls onToggle={onToggle}/>\n      <Editor style={{color: 'red'}}\n        editorState={editorState}\n        handleKeyCommand={handleKeyCommand}\n        onChange={setEditorState}\n        placeholder='Your note information...'/>\n    </MainDiv>\n  );\n}\n\nconst BlockStyleControls = ({onToggle}) => {\n  const BLOCK_TYPES = [\n    {label: 'H1', style: 'header-one'},\n    {label: 'H2', style: 'header-two'},\n    {label: 'H3', style: 'header-three'},\n    {label: 'H4', style: 'header-four'},\n    {label: 'H5', style: 'header-five'},\n    {label: 'H6', style: 'header-six'},\n    {label: 'Blockquote', style: 'blockquote'},\n    {label: 'UL', style: 'unordered-list-item'},\n    {label: 'OL', style: 'ordered-list-item'},\n    {label: 'Code Block', style: 'code-block'}\n  ];\n\n  const onClick = (e, style) => {\n    e.preventDefault();\n    onToggle(style);\n  }\n\n  return (\n    <BlockButtonDiv>\n      {BLOCK_TYPES.map(type =>\n         <BlockButtons key={type.label} onClick={e => onClick(e, type.style)}>\n          {type.label}\n        </BlockButtons>\n      )}\n    </BlockButtonDiv>\n  );\n}\n\nexport default Note;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport SideNav from './SideNav';\nimport Note from './Note';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n\n  // temporarily set up data\n  useEffect(() => {\n    const notes = [\n      {title: 'My first note!!', body: 'Some random text'},\n      {title: 'Journal 1', body: 'My journal entry'},\n      {title: 'Journal 2', body: 'My second journal entry'}\n    ];\n    setNotes(notes);\n    setSelectedNoteIndex(0);\n  }, []);\n\n  // change which note is currently open\n  const changeCurrentNote = (event, i) => {\n    setSelectedNoteIndex(i);\n  }\n\n  // add notes\n  const addNote = (event) => {\n    setNotes(prevNote => prevNote.concat([{title: '*new note*', body: ''}]));\n    // should be \"notes.length-1\"... but for some reason it takes a bit to update\n    setSelectedNoteIndex(notes.length);\n  }\n\n  // update data with new title\n  const handleChangeTitle = (event) => {\n    const titleValue = event.target.value;\n    setNotes(prevNote => {\n      prevNote[selectedNoteIndex].title = titleValue;\n      return [...prevNote];\n    });\n  }\n\n  // update data with new body\n  const handleChangeBody = (event) => {\n    const bodyValue = event.target.value;\n    setNotes(prevNote => {\n      prevNote[selectedNoteIndex].body = bodyValue;\n      return [...prevNote];\n    });\n  }\n\n  return (\n    <Div>\n      <SideNav noteTitles={notes.map(e => e.title)} changeCurrentNote={changeCurrentNote} addNote={addNote}/>\n      {notes.length > 0 && (\n        <Note note={notes[selectedNoteIndex]} handleChangeTitle={handleChangeTitle} handleChangeBody={handleChangeBody}/>\n      )}\n    </Div>\n  );\n}\n\nconst Div = styled.div`\n  font-family: Arial, Helvetica, sans-serif;\n  display: flex;\n  height: 100vh;\n`;\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}