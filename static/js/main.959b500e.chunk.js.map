{"version":3,"sources":["components/SideNav/styles.js","components/SideNav/index.js","components/Note/styles.js","components/Note/index.js","components/App.js","index.js"],"names":["MainNav","styled","nav","Header","header","Hr","hr","CardButton","button","SideNav","noteTitles","changeCurrentNote","addNote","style","fontWeight","textDecoration","onClick","map","title","i","key","e","MainDiv","div","InputTitle","input","BlockButtonDiv","BlockButtons","BlockStyleControls","onToggle","label","type","preventDefault","Note","note","handleChangeTitle","handleChangeBody","placeholder","value","onChange","blockType","RichUtils","toggleBlockType","body","color","editorState","handleKeyCommand","command","newState","App","useState","notes","setNotes","selectedNoteIndex","setSelectedNoteIndex","useEffect","EditorState","createEmpty","display","height","event","prevNote","concat","length","titleValue","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.959b500e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MainNav = styled.nav`\n  background-color: #ccc;\n  width: 20%;\n  height: 100%;\n`;\n\nexport const Header = styled.header`\n  text-align: center;\n  padding: 4%;\n  background-color: grey;\n`;\n\nexport const Hr = styled.hr`\n  margin: 0;\n  border: none;\n  background-color: black;\n  height: .3%\n`;\n\nexport const CardButton = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 500;\n  background-color: inherit;\n  padding: 10%;\n  width: 100%;\n  :hover {\n    background-color: white;\n  }\n  :active {\n    background-color: #29B6F6;\n  }\n`;","import React from 'react';\nimport { MainNav, Header, Hr, CardButton } from './styles.js'\n\nconst SideNav = ({noteTitles, changeCurrentNote, addNote}) => {\n  return (\n    <MainNav>\n      <Header>Notes App v0</Header>\n      <Hr/>\n      <CardButton style={{fontWeight: '800', textDecoration: 'underline'}} onClick={addNote}>\n        Add a new note\n      </CardButton>\n\n      {noteTitles.map((title, i) => (\n        <CardButton key={i} onClick={e => changeCurrentNote(e, i)}>\n          {title === '' ? '*no title*' : title}\n        </CardButton>\n      ))}\n    </MainNav>\n  );\n}\n\nexport default SideNav;","import styled from 'styled-components';\n\nexport const MainDiv = styled.div`\n  text-align: center;\n  margin: 2%;\n  padding: 1%;\n  width: 100%;\n`;\n\nexport const InputTitle = styled.input`\n  border: none;\n  width: 95%;\n  padding: 1%;\n  font-size: 3em;\n  outline: none;\n  border-bottom-style: solid;\n  border-bottom-color: black;\n`;\n\nexport const BlockButtonDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 1%;\n`;\n\nexport const BlockButtons = styled.button`\n  border: 1px solid #000;\n  outline: none;\n  background-color: #ccc;\n  font-size: 18px;\n  :active {\n    background-color: #29B6F6;\n  }\n`;","import React from 'react';\nimport { Editor, RichUtils } from 'draft-js';\nimport './draft.css';\nimport { MainDiv, InputTitle, BlockButtonDiv, BlockButtons } from './styles'\n\nconst Note = ({note, handleChangeTitle, handleChangeBody}) => {\n  const onToggle = blockType => {\n    handleChangeBody(RichUtils.toggleBlockType(note.body, blockType));\n  }\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleChangeBody(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  }\n\n  return (\n    <MainDiv>\n      <InputTitle type='text' placeholder='Your note title...'\n        value={note.title}\n        onChange={handleChangeTitle}/>\n\n      <BlockStyleControls onToggle={onToggle}/>\n      <Editor style={{color: 'red'}}\n        editorState={note.body}\n        handleKeyCommand={handleKeyCommand}\n        onChange={handleChangeBody}\n        placeholder='Your note information...'/>\n    </MainDiv>\n  );\n}\n\nconst BlockStyleControls = ({onToggle}) => {\n  const BLOCK_TYPES = [\n    {label: 'H1', style: 'header-one'},\n    {label: 'H2', style: 'header-two'},\n    {label: 'H3', style: 'header-three'},\n    {label: 'H4', style: 'header-four'},\n    {label: 'H5', style: 'header-five'},\n    {label: 'H6', style: 'header-six'},\n    {label: 'Blockquote', style: 'blockquote'},\n    {label: 'UL', style: 'unordered-list-item'},\n    {label: 'OL', style: 'ordered-list-item'},\n    {label: 'Code Block', style: 'code-block'}\n  ];\n\n  const onClick = (e, style) => {\n    e.preventDefault();\n    onToggle(style);\n  }\n\n  return (\n    <BlockButtonDiv>\n      {BLOCK_TYPES.map(type =>\n         <BlockButtons key={type.label} onClick={e => onClick(e, type.style)}>\n          {type.label}\n        </BlockButtons>\n      )}\n    </BlockButtonDiv>\n  );\n}\n\nexport default Note;","import React, { useState, useEffect } from 'react';\nimport { EditorState } from 'draft-js';\nimport SideNav from './SideNav';\nimport Note from './Note';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n\n  // temporarily set up data\n  useEffect(() => {\n    const notes = [\n      {title: 'My first note!!', body: EditorState.createEmpty()},\n      {title: 'Journal 1', body: EditorState.createEmpty()},\n      {title: 'Journal 2', body: EditorState.createEmpty()}\n    ];\n    setNotes(notes);\n    setSelectedNoteIndex(0);\n  }, []);\n\n  // change which note is currently open\n  const changeCurrentNote = (event, i) => {\n    setSelectedNoteIndex(i);\n  }\n\n  // add notes\n  const addNote = (event) => {\n    setNotes(prevNote => prevNote.concat([{title: '', body: EditorState.createEmpty()}]));\n    // should be \"notes.length-1\"... but for some reason it takes a bit to update\n    setSelectedNoteIndex(notes.length);\n  }\n\n  // update data with new title\n  const handleChangeTitle = (event) => {\n    const titleValue = event.target.value;\n    setNotes(prevNote => {\n      prevNote[selectedNoteIndex].title = titleValue;\n      return [...prevNote];\n    });\n  }\n\n  // update data with new body\n  const handleChangeBody = (editorState) => {\n    setNotes(prevNote => {\n      prevNote[selectedNoteIndex].body = editorState;\n      return [...prevNote];\n    });\n  }\n\n  return (\n    <div style={{display: \"flex\", height: \"100vh\"}}>\n      <SideNav\n        noteTitles={notes.map(e => e.title)}\n        changeCurrentNote={changeCurrentNote}\n        addNote={addNote}/>\n      {notes.length > 0 && (\n        <Note\n          note={notes[selectedNoteIndex]}\n          handleChangeTitle={handleChangeTitle}\n          handleChangeBody={handleChangeBody}/>\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}