{"version":3,"sources":["components/SideNav/styles.js","components/SideNav/index.js","components/Note/styles.js","components/Note/index.js","components/App.js","index.js"],"names":["MainNav","styled","nav","Hr","hr","NoteButton","button","AddButton","SideNav","noteTitles","changeCurrentNote","addNote","style","fontWeight","onClick","map","title","i","key","e","MainDiv","div","InputTitle","input","BlockButtonDiv","DropDownDiv","DropDownButton","DropDownContent","BlockStyleControls","onToggle","preventDefault","label","header","list","o","Note","note","handleChangeTitle","handleChangeBody","type","placeholder","value","onChange","blockType","RichUtils","toggleBlockType","body","color","editorState","handleKeyCommand","command","newState","App","useState","notes","setNotes","selectedNoteIndex","setSelectedNoteIndex","useEffect","EditorState","createEmpty","display","height","event","prevNote","concat","length","titleValue","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.128f8d17.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MainNav = styled.nav`\n  background-color: #ccc;\n  min-width: 20%;\n  max-width: 20%;\n  height: 100%;\n  overflow: auto;\n  ::-webkit-scrollbar {\n    width: 5%;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: #fff;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: #000;\n  }\n`;\n\nexport const Hr = styled.hr`\n  margin: 0;\n  border: none;\n  background-color: black;\n  height: .3%\n`;\n\nexport const NoteButton = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 500;\n  padding: 10%;\n  width: 100%;\n  background-color: inherit;\n  :hover {\n    background-color: white;\n  }\n  :active {\n    background-color: #29B6F6;\n  }\n`;\n\nexport const AddButton = styled(NoteButton)`\n  font-weight: 800;\n  background-color: black;\n  color: white;\n  :hover {\n    background-color: white;\n    color: black;\n  }\n  :active {\n    background-color: #29B6F6;\n    color: black;\n  }\n`;","import React from 'react';\nimport { MainNav, Hr, AddButton, NoteButton } from './styles.js';\n\nconst SideNav = ({noteTitles, changeCurrentNote, addNote}) => {\n  return (\n    <MainNav>\n      <AddButton style={{fontWeight: 800}} onClick={addNote}>\n        Add a note\n      </AddButton>\n      <Hr/>\n\n      {noteTitles.map((title, i) => (\n        <NoteButton key={i} onClick={e => changeCurrentNote(e, i)}>\n          {title === '' ? '*no title*' : title}\n        </NoteButton>\n      ))}\n    </MainNav>\n  );\n}\n\nexport default SideNav;","import styled from 'styled-components';\n\nexport const MainDiv = styled.div`\n  text-align: center;\n  margin: 2%;\n  padding: 1%;\n  width: 100%;\n`;\n\nexport const InputTitle = styled.input`\n  border: none;\n  width: 95%;\n  padding: 1%;\n  font-size: 3em;\n  outline: none;\n  border-bottom-style: solid;\n  border-bottom-color: black;\n`;\n\nexport const BlockButtonDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  align-content: stretch;\n  padding: 1%;\n`;\n\nexport const DropDownDiv = styled.div`\n  width: 20%;\n`;\n\nexport const DropDownButton = styled.div`\n  border: 1px solid #000;\n  outline: none;\n  background-color: #ccc;\n  padding: 10%;\n  overflow: hidden;\n  :hover {\n    background-color: white;\n  }\n  :active {\n    background-color: #29B6F6;\n  }\n`;\n\nexport const DropDownContent = styled.div`\n  display: none;\n  flex-direction: column;\n  overflow: hidden;\n  position: absolute;\n  // min-width: inherit;\n  width: inherit;\n  max-width: 15%;\n  z-index: 99;\n  ${DropDownDiv}:hover & {\n    display: flex;\n  }\n`;","import React from 'react';\nimport { Editor, RichUtils } from 'draft-js';\nimport './draft.css';\nimport {\n  MainDiv,\n  InputTitle,\n  BlockButtonDiv,\n  DropDownDiv,\n  DropDownButton,\n  DropDownContent\n} from './styles'\n\nconst Note = ({note, handleChangeTitle, handleChangeBody}) => {\n  const onToggle = blockType => {\n    handleChangeBody(RichUtils.toggleBlockType(note.body, blockType));\n  }\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleChangeBody(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  }\n\n  return (\n    <MainDiv>\n      <InputTitle type='text' placeholder='Your note title...'\n        value={note.title}\n        onChange={handleChangeTitle}/>\n\n      <BlockStyleControls onToggle={onToggle}/>\n      <Editor style={{color: 'red'}}\n        editorState={note.body}\n        handleKeyCommand={handleKeyCommand}\n        onChange={handleChangeBody}\n        placeholder='Your note information...'/>\n    </MainDiv>\n  );\n}\n\nconst BlockStyleControls = ({onToggle}) => {\n  const HEADERS = [\n    {label: 'H1', style: 'header-one'},\n    {label: 'H2', style: 'header-two'},\n    {label: 'H3', style: 'header-three'},\n    {label: 'H4', style: 'header-four'},\n  ];\n  const LISTS = [\n    {label: 'UL', style: 'unordered-list-item'},\n    {label: 'OL', style: 'ordered-list-item'},\n  ];\n  const OTHER = [\n    {label: 'Blockquote', style: 'blockquote'},\n    {label: 'Code Block', style: 'code-block'},\n  ];\n\n  const onClick = (e, style) => {\n    e.preventDefault();\n    onToggle(style);\n  }\n\n  return (\n    <BlockButtonDiv>\n      <DropDownDiv>\n        <DropDownButton>Headings</DropDownButton>\n        <DropDownContent>\n          {HEADERS.map(header =>\n            <DropDownButton key={header.label} onClick={e => onClick(e, header.style)}>\n              {header.label}\n            </DropDownButton>\n          )}\n        </DropDownContent>\n      </DropDownDiv>\n\n      <DropDownDiv>\n        <DropDownButton>Lists</DropDownButton>\n        <DropDownContent>\n          {LISTS.map(list =>\n            <DropDownButton key={list.label} onClick={e => onClick(e, list.style)}>\n              {list.label}\n            </DropDownButton>\n          )}\n        </DropDownContent>\n      </DropDownDiv>\n\n      <DropDownDiv>\n        <DropDownButton>Other</DropDownButton>\n        <DropDownContent>\n          {OTHER.map(o =>\n            <DropDownButton key={o.label} onClick={e => onClick(e, o.style)}>\n              {o.label}\n            </DropDownButton>\n          )}\n        </DropDownContent>\n      </DropDownDiv>\n    </BlockButtonDiv>\n  );\n}\n\nexport default Note;","import React, { useState, useEffect } from 'react';\nimport { EditorState } from 'draft-js';\nimport SideNav from './SideNav';\nimport Note from './Note';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n\n  // temporarily set up data\n  useEffect(() => {\n    const notes = [\n      {title: 'My first note!!', body: EditorState.createEmpty()},\n      {title: 'Journal 1', body: EditorState.createEmpty()},\n      {title: 'Journal 2', body: EditorState.createEmpty()},\n    ];\n    setNotes(notes);\n    setSelectedNoteIndex(0);\n  }, []);\n\n  // change which note is currently open\n  const changeCurrentNote = (event, i) => {\n    setSelectedNoteIndex(i);\n  }\n\n  // add notes\n  const addNote = (event) => {\n    setNotes(prevNote => prevNote.concat([{title: '', body: EditorState.createEmpty()}]));\n    // should be \"notes.length-1\"... but for some reason it takes a bit to update\n    setSelectedNoteIndex(notes.length);\n  }\n\n  // update data with new title\n  const handleChangeTitle = (event) => {\n    const titleValue = event.target.value;\n    setNotes(prevNote => {\n      prevNote[selectedNoteIndex].title = titleValue;\n      return [...prevNote];\n    });\n  }\n\n  // update data with new body\n  const handleChangeBody = (editorState) => {\n    setNotes(prevNote => {\n      prevNote[selectedNoteIndex].body = editorState;\n      return [...prevNote];\n    });\n  }\n\n  return (\n    <div style={{display: \"flex\", height: \"100vh\"}}>\n      <SideNav\n        noteTitles={notes.map(e => e.title)}\n        changeCurrentNote={changeCurrentNote}\n        addNote={addNote}/>\n      {notes.length > 0 && (\n        <Note\n          note={notes[selectedNoteIndex]}\n          handleChangeTitle={handleChangeTitle}\n          handleChangeBody={handleChangeBody}/>\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}